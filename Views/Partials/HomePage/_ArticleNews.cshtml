@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models.PublishedContent;


@{
    var itemsPerPage = 3;
    var pageNumber = 1;
    if (!int.TryParse(Context.Request.Query["page"], out pageNumber))
    {
        pageNumber = 1;
    }

    var selection = Umbraco?.Content(Guid.Parse("0a097478-c50a-43e4-8428-40517a242aa0"))?
    .ChildrenOfType("ArticleDetailsPage")?
    .Where(x => x.IsVisible())
    .OrderByDescending(x => x.CreateDate).ToList();

    var totalArticles = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((pageNumber - 1) * itemsPerPage).Take(itemsPerPage);
}

<section class="an-section">
    <div class="container an-con">
        <p class="an-title">Article & News</p>
        <div class="row">
            <div class="col-9">
                <h1 class="an-header-title">Get Every Single Articles & News</h1>
            </div>
            <div class="col-3 d-flex justify-content-end">
                <a href="/news" class="an-ba-btn">Browse Articles <i class="fa-light fa-arrow-up-right"></i></a>
            </div>
        </div>
        <div class="row">

            @if (pagedItems != null)
            {
                @foreach (var item in pagedItems)
                {
                    var url = item.Url();
                    var dayOfMonth = item.CreateDate.Day;
                    var month = item.CreateDate.ToString("MMM");
                    var image = item.Value<IPublishedContent>("articleImage");
                    var category = item.Value("articleCategory");
                    var title = item.Name();
                    var description = item.Value("articlePreamble");

                    if (item.Key == Model.Key)
                    {
                        continue;
                    }

                    <div class="col-6 col-lg-4 on-card">
                        <a href="@url" class="article-link">
                            <div class="on-date">
                                <h5 class="on-date-number">@dayOfMonth</h5>
                                <p class="on-date-month">@month</p>
                            </div>
                            <img class="on-img" src="@image!.MediaUrl()" />
                            <p class="on-underline-p">@category</p>
                            <h4 class="on-underline-title">@title</h4>
                            <p class="on-title-p">@description</p>
                        </a>
                    </div>
                }
            }

        </div>
    </div>
</section>




