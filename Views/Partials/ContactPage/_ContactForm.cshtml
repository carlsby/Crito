@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
    var contactForm = new Crito.Models.ContactForm();
}

<div class="container con-for-con">
    <div class="row d-flex justify-content-center">
        <div class="col-4 con-card">
            <div class="row info-div">
                <div class="col-2 con-undercard">
                    <i class="fa-solid fa-location-dot" id="contact-icon"></i>
                </div>
                <div class="col-10 con-undercard">
                    <p class="con-title">Visit us</p>
                    <p class="con-info">@Model.Value("contactInformationStreetName")</p>
                    <p class="con-info">@Model.Value("contactInformationPostalCode") @Model.Value("contactInformationCity")</p>
                </div>
            </div>
        </div>
        <div class="col-4 con-card">
            <div class="row">
                <div class="col-2 con-undercard">
                    <i class="fa-solid fa-phone" id="contact-icon"></i>
                </div>
                <div class="col-10 con-undercard">
                    <p class="con-title">Call us</p>
                    <p class="con-info">@Model.Value("contactInformationPhoneNumber1")</p>
                    <p class="con-info">@Model.Value("contactInformationPhoneNumber2")</p>
                </div>
            </div>
        </div>
        <div class="col-4 con-card">
            <div class="row">
                <div class="col-2 con-undercard">
                    <i class="fa-solid fa-envelope" id="contact-icon"></i>
                </div>
                <div class="col-10 con-undercard">
                    <p class="con-title">Email us</p>
                    <p class="con-info">@Model.Value("contactInformationEmail1")</p>
                    <p class="con-info">@Model.Value("contactInformationEmail2")</p>
                </div>
            </div>
        </div>
    </div>

    <div class="contact-form-con">
        <h1 class="contact-form-title">Leave us a message for any information.</h1>

        @if (!string.IsNullOrEmpty(TempData["SuccessMessage"] as string))
        {
            <div class="alert alert-success" role="alert">
                <strong>@TempData["SuccessMessage"]</strong>
            </div>
        }

        @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
        {
            <div class="alert alert-danger" role="alert">
                <strong>Something went wrong.</strong><br/>@TempData["ErrorMessage"]
            </div>
        }


        @using (Html.BeginUmbracoForm("Index", "Contacts", FormMethod.Post))
        {
            <input asp-for="@contactForm.Name" class="contact-input" placeholder="Name*" />
            <input asp-for="@contactForm.Email" class="contact-input" placeholder="Email*" />
            <input asp-for="@contactForm.Message" class="contact-input contact-message" placeholder="Your Message*" />
            <button type="submit" class="btn btn-warning contact-btn">Send Message <i class="fa-light fa-arrow-up-right"></i></button>
        }

    </div>
</div>